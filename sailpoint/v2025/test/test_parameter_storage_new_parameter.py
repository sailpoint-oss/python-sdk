# coding: utf-8

"""
    Identity Security Cloud V2025 API

    Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: v2025
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sailpoint.v2025.models.parameter_storage_new_parameter import ParameterStorageNewParameter

class TestParameterStorageNewParameter(unittest.TestCase):
    """ParameterStorageNewParameter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParameterStorageNewParameter:
        """Test ParameterStorageNewParameter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParameterStorageNewParameter`
        """
        model = ParameterStorageNewParameter()
        if include_optional:
            return ParameterStorageNewParameter(
                owner_id = 'c0b4568a4fe7458c434ee77d1fbt156b',
                name = 'Credentials for server.',
                type = '1.1',
                public_fields = {"username": "username"},
                private_fields = 'ZW5jcnlwdGVkIHBhc3N3b3JkIGhlcmUu',
                description = 'Credentials for server.'
            )
        else:
            return ParameterStorageNewParameter(
                owner_id = 'c0b4568a4fe7458c434ee77d1fbt156b',
                name = 'Credentials for server.',
                type = '1.1',
        )
        """

    def testParameterStorageNewParameter(self):
        """Test ParameterStorageNewParameter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
