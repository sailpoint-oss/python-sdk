# coding: utf-8

"""
    Identity Security Cloud V2025 API

    Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: v2025
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sailpoint.v2025.models.sod_policy import SodPolicy

class TestSodPolicy(unittest.TestCase):
    """SodPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SodPolicy:
        """Test SodPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SodPolicy`
        """
        model = SodPolicy()
        if include_optional:
            return SodPolicy(
                id = '0f11f2a4-7c94-4bf3-a2bd-742580fe3bde',
                name = 'policy-xyz',
                created = '2020-01-01T00:00Z',
                modified = '2020-01-01T00:00Z',
                description = 'This policy ensures compliance of xyz',
                owner_ref = sailpoint.v2025.models.sod_policy_owner_ref.SodPolicy_ownerRef(
                    type = 'IDENTITY', 
                    id = '2c9180a46faadee4016fb4e018c20639', 
                    name = 'Support', ),
                external_policy_reference = 'XYZ policy',
                policy_query = '@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)',
                compensating_controls = 'Have a manager review the transaction decisions for their "out of compliance" employee',
                correction_advice = 'Based on the role of the employee, managers should remove access that is not required for their job function.',
                state = 'ENFORCED',
                tags = [TAG1, TAG2],
                creator_id = '0f11f2a4-7c94-4bf3-a2bd-742580fe3bde',
                modifier_id = '0f11f2a4-7c94-4bf3-a2bd-742580fe3bde',
                violation_owner_assignment_config = sailpoint.v2025.models.violation_owner_assignment_config.ViolationOwnerAssignmentConfig(
                    assignment_rule = 'MANAGER', 
                    owner_ref = sailpoint.v2025.models.violation_owner_assignment_config_owner_ref.ViolationOwnerAssignmentConfig_ownerRef(
                        type = 'IDENTITY', 
                        id = '2c9180a46faadee4016fb4e018c20639', 
                        name = 'Support', ), ),
                scheduled = True,
                type = 'GENERAL',
                conflicting_access_criteria = None
            )
        else:
            return SodPolicy(
        )
        """

    def testSodPolicy(self):
        """Test SodPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
