# coding: utf-8

"""
    Identity Security Cloud V3 API

    Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sailpoint.v3.models.source_connections_dto import SourceConnectionsDto

class TestSourceConnectionsDto(unittest.TestCase):
    """SourceConnectionsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceConnectionsDto:
        """Test SourceConnectionsDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceConnectionsDto`
        """
        model = SourceConnectionsDto()
        if include_optional:
            return SourceConnectionsDto(
                identity_profiles = [
                    sailpoint.v3.models.identity_profiles_connections.IdentityProfilesConnections(
                        id = '76cfddb62818416f816bc494410f46c4', 
                        name = 'ODS-Identity-Profile', 
                        identity_count = 100, )
                    ],
                credential_profiles = [
                    '[Profile ODS]'
                    ],
                source_attributes = [
                    '[sAMAccountName, mail, sn, givenName, displayName, employeeNumber, manager, telephoneNumber]'
                    ],
                mapping_profiles = [ODS-AD-Profile, ODS-Profile2],
                dependent_custom_transforms = [{id=61190eae-290b-4335-aeb8-7335f1fd99cb, name=Split Transform, type=split, attributes={delimiter=-, index=1, input={attributes={sourceName=Example CSV Source, attributeName=last_name}, type=accountAttribute}}, internal=false}],
                dependent_apps = [
                    sailpoint.v3.models.dependant_app_connections.DependantAppConnections(
                        cloud_app_id = '9e3cdd80edf84f119327df8bbd5bb5ac', 
                        description = 'This is a Sailpoint application', 
                        enabled = True, 
                        provision_request_enabled = True, 
                        account_source = sailpoint.v3.models.dependant_app_connections_account_source.DependantAppConnections_accountSource(
                            use_for_password_management = False, 
                            password_policies = [
                                sailpoint.v3.models.dependant_app_connections_account_source_password_policies_inner.DependantAppConnections_accountSource_passwordPolicies_inner(
                                    type = 'PASSWORD_POLICY', 
                                    id = '2c91808568c529c60168cca6f90c1313', 
                                    name = 'Policy ODS', )
                                ], ), 
                        launcher_count = 100, 
                        match_all_account = True, 
                        owner = [
                            sailpoint.v3.models.base_reference_dto.BaseReferenceDto(
                                type = 'IDENTITY', 
                                id = '2c91808568c529c60168cca6f90c1313', 
                                name = 'William Wilson', )
                            ], 
                        app_center_enabled = False, )
                    ],
                missing_dependents = [
                    sailpoint.v3.models.dependant_connections_missing_dto.DependantConnectionsMissingDto(
                        dependency_type = 'dependantApps', 
                        reason = 'If there was an error retrieving any dependencies, it would lbe listed here', )
                    ]
            )
        else:
            return SourceConnectionsDto(
        )
        """

    def testSourceConnectionsDto(self):
        """Test SourceConnectionsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
