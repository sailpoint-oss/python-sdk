# coding: utf-8

"""
    Identity Security Cloud V2024 API

    Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: v2024
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sailpoint.v2024.models.outlier_feature_summary import OutlierFeatureSummary

class TestOutlierFeatureSummary(unittest.TestCase):
    """OutlierFeatureSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OutlierFeatureSummary:
        """Test OutlierFeatureSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OutlierFeatureSummary`
        """
        model = OutlierFeatureSummary()
        if include_optional:
            return OutlierFeatureSummary(
                contributing_feature_name = 'Rare Access',
                identity_outlier_display_name = 'John Smith',
                outlier_feature_display_values = [
                    sailpoint.v2024.models.outlier_feature_summary_outlier_feature_display_values_inner.OutlierFeatureSummary_outlierFeatureDisplayValues_inner(
                        display_name = 'Aliza Chris', 
                        value = '55', 
                        value_type = sailpoint.v2024.models.outlier_value_type.OutlierValueType(
                            name = 'INTEGER', 
                            ordinal = 0, ), )
                    ],
                feature_definition = 'Identity total number of entitlements',
                feature_explanation = 'An identity that has too much rare access has a higher change of becoming a security threat due to the unique access they possess',
                peer_display_name = 'Mary Jane',
                peer_identity_id = '9f9d5d53ad0e48fba7352f6da9f1b8gbg',
                access_item_reference = {displayName=All Rare Entitlements, searchPlaceholder=Search by name or description}
            )
        else:
            return OutlierFeatureSummary(
        )
        """

    def testOutlierFeatureSummary(self):
        """Test OutlierFeatureSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
