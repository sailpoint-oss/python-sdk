import unittest
import sailpoint.{{apiVersion}}
from sailpoint.configuration import Configuration, ConfigurationParams
from sailpoint.paginator import Paginator

class TestPythonSDK(unittest.TestCase):

    configuration = Configuration()
    configuration.experimental = True
    {{apiVersion}}_api_client = sailpoint.{{apiVersion}}.ApiClient(configuration)

{{#operations}}
{{#operation}}
    {{#returnType}}
    {{#isArray}}
    {{^pathParams}}
    def test_{{operationId}}(self):
        {{#headerParams}}x_sail_point_experimental = "true"{{/headerParams}}
        {{#returnType}}api_response = {{/returnType}}{{#asyncio}}await {{/asyncio}}sailpoint.{{apiVersion}}.{{classname}}(self.{{apiVersion}}_api_client).{{{operationId}}}_with_http_info({{#requiredParams}}{{#isBodyParam}}{{paramName}}=new_{{paramName}}{{^-last}}, {{/-last}}{{/isBodyParam}}{{^isBodyParam}}{{paramName}}={{paramName}}{{^-last}}, {{/-last}}{{/isBodyParam}}{{/requiredParams}})
        self.assertIsNotNone(api_response.data)
        self.assertEqual(200, api_response.status_code)
    {{/pathParams}}
    {{/isArray}}
    {{/returnType}}
  {{/operation}}
{{/operations}}

if __name__ == '__main__':
    unittest.main()